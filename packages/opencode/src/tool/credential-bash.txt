Executes a bash command with credentials resolved from environment variables and added to the command's execution environment.

This tool allows you to run commands that require sensitive credentials (API keys, tokens, passwords) without exposing them in the command itself. The credential values are resolved from environment variables and securely passed to the command's execution environment.

Usage:
- Specify the command to execute
- Provide an array of environment variable names in the `credentials` parameter
- The tool will resolve these environment variables and add them to the command's execution environment
- If any required credentials are missing from the environment, the command will fail with an error listing the missing variables

When to use this tool:
- Before any deployment operations
- When you need to authenticate with external services
- For operations that require API keys, tokens, or secrets
- If you're unsure whether required credentials are available, use the list-credentials tool first

Security considerations:
- Credentials are never logged or exposed in the command output
- Environment variables are resolved at execution time
- Missing credentials cause the command to fail before execution
- The command runs in an isolated environment with only the specified credentials

Examples:
- credentials: ["API_KEY", "SECRET_TOKEN"] - resolves API_KEY and SECRET_TOKEN from environment
- command: "curl -H 'Authorization: Bearer $API_KEY' https://api.example.com" - uses the resolved API_KEY

Usage notes:
- The command and credentials parameters are required
- You can specify an optional timeout in milliseconds (up to 600000ms / 10 minutes)
- If not specified, commands will timeout after 120000ms (2 minutes)
- It is helpful to write a clear, concise description of what the command does
- If the output exceeds 30000 characters, output will be truncated
- Follow the same command execution guidelines as the regular bash tool
